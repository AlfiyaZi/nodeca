#!/usr/bin/env node

'use strict';

var Path = require('path');

var NLib = require('nlib');

var Async = NLib.Vendor.Async;
var FsTools = NLib.Vendor.FsTools;
var Cli = NLib.Vendor.Cli;


var usage = './bin/db-seed --a <app_name> [<seed_name>] '
          + "\n"
          + "\n"
          + "That will run `.<app_name>/db/seeds/<seed_name>.js` if exists. Or, all seeds from\n"
          + "`./db/seeds/seed-name/` folder. If <seed-name> missed, then script will show all\n"
          + "available seeds for given app. If `-a` missed, then all seed for all apps\n"
          + "will be shown.\n"
          + "\n"
          + "Note: Loading seeds is limited to development/test enviroment. If you really need to\n"
          + "      run seed  on production/stageing, use option -f (--force)\n";
Cli.setUsage(usage);
Cli.parse({
  app_name: ['a', 'Application name', 'string'],
  force: ['f', 'Run without env checking', 'bool']
});

if (Cli.args.length > 1){
  console.log('Error: Wrong argument count');
  process.exit(1);
}


var app_name = Cli.options.app_name;
var seed_name = Cli.args[0];

var SEEDS_DIR = 'db/seeds'

function get_app_path(app_name){
  for (var i=0; i < nodeca.runtime.apps.length; i++) {
    if (app_name === nodeca.runtime.apps[i].name){
      return nodeca.runtime.apps[i].root;
    }
  };
  return null;
}

NLib.Application.create({
  name: 'nodeca',
  root: process.cwd()
}).run(['init-start', 'models-tree', 'shared-tree'], function(err){
  if (err){
    console.log(err);
    process.exit(1);
  }

  // execute seed
  if (!!app_name && !!seed_name){
    var env = nodeca.runtime.env;
    if ('development' !== env && 'testing' !== env && !Cli.options.force) {
      console.log('Error: Can\'t run seed from ' + env + ' enviroment. Please, use -f to force.');
      process.exit(1);
    }

    var seed_path = Path.join(get_app_path(app_name), SEEDS_DIR, seed_name);
    if (!Path.existsSync(seed_path)){
      console.log('Error: Application "' + app_name + '"does not have "' + seed_name);
      process.exit(1);
    }

    require(seed_path).up(function(err){
      if (err) {
        nodeca.logger.log(err);
        process.exit(1);
      }
      process.exit(0);
    });
  }
  else {
    if (app_name) {
      var apps = [{name: app_name, root: get_app_path(app_name)}]
    }
    else {
      var apps = nodeca.runtime.apps;
    }

    console.log('Avaliable seeds:');

    Async.forEachSeries(apps, function(app, next_app){
      var seed_dir = Path.join(app.root, SEEDS_DIR);
      FsTools.walk(seed_dir, /w*\.js$/, function(file, stats, next_file) {
        console.log('  ' + app.name + ':' + Path.basename(file));
        next_file();
      }, next_app);
    }, function(err){
      if (err) {
        nodeca.logger.log(err);
        process.exit(1);
      }
      process.exit(0);
    });
  }
});
